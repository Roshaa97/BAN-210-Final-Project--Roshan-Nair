MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "August 11, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:02:10" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                August 11, 2022
Time:                17:02:10
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3P4UVYC "C:\Users\AutoLogon\Desktop\Roshan Seneca\SEM 2\ROSHAN SEM 2\BAN 210\Final Project\Final Project-Roshan Nair\Workspaces\EMWS2\MdlComp\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3P4UVYC new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\AutoLogon\Desktop\Roshan Seneca\SEM 2\ROSHAN SEM 2\BAN 210\Final Project\Final Project-Roshan Nair\Workspaces\EMWS2\MdlComp\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "August 11, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:02:10" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                AutoLogon";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70192439";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M3P062415";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\AutoLogon\Desktop\Roshan Seneca\SEM 2\ROSHAN SEM 2\BAN 210\Final Project\Final Project-Roshan Nair\Workspaces\EMWS2\MdlComp\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\AutoLogon\Desktop\Roshan Seneca\SEM 2\ROSHAN SEM 2\BAN 210\Final Project\Final Project-Roshan Nair\Workspaces\EMWS2\MdlComp\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\AutoLogon\Desktop\Roshan Seneca\SEM 2\ROSHAN SEM 2\BAN 210\Final Project\Final Project-Roshan Nair\Workspaces\EMWS2\MdlComp\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\AutoLogon\Desktop\Roshan Seneca\SEM 2\ROSHAN SEM 2\BAN 210\Final Project\Final Project-Roshan Nair\Workspaces\EMWS2\MdlComp\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "August 11, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:02:10" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                AutoLogon";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\AutoLogon\Desktop\Roshan Seneca\SEM 2\ROSHAN SEM 2\BAN 210\Final Project\Final Project-Roshan Nair\Workspaces\EMWS2\MdlComp\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\AutoLogon\Desktop\Roshan Seneca\SEM 2\ROSHAN SEM 2\BAN 210\Final Project\Final Project-Roshan Nair\Workspaces\EMWS2\MdlComp\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\AutoLogon\Desktop\Roshan Seneca\SEM 2\ROSHAN SEM 2\BAN 210\Final Project\Final Project-Roshan Nair\Workspaces\EMWS2\MdlComp\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
43735      data work.MdlComp;
MPRINT(EM_DIAGRAM):    data work.MdlComp;
43736      set EMWS2.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS2.em_nodeid;
43737      where
43738      (NODEID="Reg" and LABEL ne 'Regression')
43739      OR (NODEID="Neural" and LABEL ne 'Neural Network')
43740      ;
MPRINT(EM_DIAGRAM):   where (NODEID="Reg" and LABEL ne 'Regression') OR (NODEID="Neural" and LABEL ne 'Neural Network') ;
43741      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS2.EM_NODEID.
      WHERE ((NODEID='Reg') and (LABEL not = 'Regression')) or ((NODEID='Neural') and (LABEL not = 'Neural Network'));
NOTE: The data set WORK.MDLCOMP has 0 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\AutoLogon\Desktop\Roshan Seneca\SEM 2\ROSHAN SEM 2\BAN 210\Final Project\Final Project-Roshan Nair\Workspaces\EMWS2\MdlComp\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
43743      proc freq data=EMWS2.MdlComp_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.MdlComp_VariableSet noprint;
43744      table ROLE*LEVEL/out=WORK.MdlCompMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.MdlCompMETA;
43745      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS2.MDLCOMP_VARIABLESET.
NOTE: The data set WORK.MDLCOMPMETA has 1 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

43746      proc print data=WORK.MdlCompMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.MdlCompMETA label noobs;
43747      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
43748      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
43749      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
43750      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
43751      run;

NOTE: There were 1 observations read from the data set WORK.MDLCOMPMETA.
NOTE: The PROCEDURE PRINT printed page 16.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

43752      title10;
MPRINT(EM_DIAGRAM):   title10;
43753      %let _hpflow = 0;
43754      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
43755      set EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMINFO;
43756      where key="HPDMSAMPLE";
MPRINT(EM_DIAGRAM):   where key="HPDMSAMPLE";
43757      call symput('_hpflow', '1');
MPRINT(EM_DIAGRAM):   call symput('_hpflow', '1');
43758      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS2.NEURAL_EMINFO.
      WHERE key='HPDMSAMPLE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

43759      %let _hpflow = 0;
43760      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
43761      set EMWS2.Reg_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg_EMINFO;
43762      where key="HPDMSAMPLE";
MPRINT(EM_DIAGRAM):   where key="HPDMSAMPLE";
43763      call symput('_hpflow', '1');
MPRINT(EM_DIAGRAM):   call symput('_hpflow', '1');
43764      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS2.REG_EMINFO.
      WHERE key='HPDMSAMPLE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

43765      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
43766      set EMWS2.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS2.em_nodeid;
43767      where upcase(NODEID) = upcase("Neural");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Neural");
43768      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
43769      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(NODEID)='NEURAL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

43770      data EMWS2.MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):    data EMWS2.MdlComp_EMRANK;
43771      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
43772      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))"
43772    ! TARGETLABEL =
43773         "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGETLABEL = "Target Label";
43774      retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "";
MPRINT(EM_DIAGRAM):   retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "";
43775      set EMWS2.Neural_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMRANK;
43776      where upcase(TARGET) = upcase("mpg");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("mpg");
43777      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 38 observations read from the data set EMWS2.NEURAL_EMRANK.
      WHERE UPCASE(TARGET)='MPG';
NOTE: The data set EMWS2.MDLCOMP_EMRANK has 38 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

43778      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
43779      set EMWS2.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS2.em_nodeid;
43780      where upcase(NODEID) = upcase("Neural");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Neural");
43781      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
43782      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(NODEID)='NEURAL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

43783      data EMWS2.MdlComp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):    data EMWS2.MdlComp_EMSCOREDIST;
43784      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
43785      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))"
43785    ! TARGETLABEL =
43786         "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGETLABEL = "Target Label";
43787      retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "";
MPRINT(EM_DIAGRAM):   retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "";
43788      set EMWS2.Neural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMSCOREDIST;
43789      where upcase(TARGET) = upcase("mpg");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("mpg");
43790      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set EMWS2.NEURAL_EMSCOREDIST.
      WHERE UPCASE(TARGET)='MPG';
NOTE: The data set EMWS2.MDLCOMP_EMSCOREDIST has 39 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

43791      data WORK.Neural_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.Neural_OUTFIT;
43792      set EMWS2.Neural_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMOUTFIT;
43793      where TARGET = "mpg";
MPRINT(EM_DIAGRAM):   where TARGET = "mpg";
43794      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS2.NEURAL_EMOUTFIT.
      WHERE TARGET='mpg';
NOTE: The data set WORK.NEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS2.NEURAL_EMINFO.
      WHERE (TARGET='mpg') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO43TFUOPU has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS2.NEURAL_EMINFO.
      WHERE (TARGET='mpg') and (KEY='DECDATA');
NOTE: The data set WORK.EMINFO43TFUOPU has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
43795      data WORK.Neural_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.Neural_OUTFIT;
43796      set WORK.Neural_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.Neural_OUTFIT;
43797      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.NEURAL_OUTFIT.
NOTE: The data set WORK.NEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

43798      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
43799      set EMWS2.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS2.em_nodeid;
43800      where upcase(NODEID) = upcase("Neural");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Neural");
43801      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
43802      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(NODEID)='NEURAL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

43803      data EMWS2.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS2.MdlComp_EMOUTFIT;
43804      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
43805      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))"
43805    ! TARGETLABEL =
43806         "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGETLABEL = "Target Label";
43807      retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "";
MPRINT(EM_DIAGRAM):   retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "";
43808      set WORK.Neural_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.Neural_OUTFIT;
43809      where upcase(TARGET) = upcase("mpg");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("mpg");
43810      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.NEURAL_OUTFIT.
      WHERE UPCASE(TARGET)='MPG';
NOTE: The data set EMWS2.MDLCOMP_EMOUTFIT has 1 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

43811      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
43812      set EMWS2.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS2.em_nodeid;
43813      where upcase(NODEID) = upcase("Neural");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Neural");
43814      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
43815      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(NODEID)='NEURAL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

43816      data EMWS2.MdlComp_EMRESIDUAL;
MPRINT(EM_DIAGRAM):    data EMWS2.MdlComp_EMRESIDUAL;
43817      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
43818      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))"
43818    ! TARGETLABEL =
43819         "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGETLABEL = "Target Label";
43820      retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "";
MPRINT(EM_DIAGRAM):   retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "";
43821      set EMWS2.Neural_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMRESIDUAL;
43822      where upcase(TARGET) = upcase("mpg");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("mpg");
43823      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 19 observations read from the data set EMWS2.NEURAL_EMRESIDUAL.
      WHERE UPCASE(TARGET)='MPG';
NOTE: The data set EMWS2.MDLCOMP_EMRESIDUAL has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

43824      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
43825      set EMWS2.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS2.em_nodeid;
43826      where upcase(NODEID) = upcase("Reg");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Reg");
43827      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
43828      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(NODEID)='REG';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

43829      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
43830      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
43831      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
43832         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
43833      retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "";
MPRINT(EM_DIAGRAM):   retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "";
43834      set EMWS2.Reg_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg_EMRANK;
43835      where upcase(TARGET) = upcase("mpg");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("mpg");
43836      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS2.REG_EMRANK.
      WHERE UPCASE(TARGET)='MPG';
NOTE: The data set WORK.MDLCOMP_TEMP has 40 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

43837      data EMWS2.MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):   data EMWS2.MdlComp_EMRANK;
43838      set EMWS2.MdlComp_EMRANK work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_EMRANK work.MdlComp_TEMP;
43839      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 38 observations read from the data set EMWS2.MDLCOMP_EMRANK.
NOTE: There were 40 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS2.MDLCOMP_EMRANK has 78 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

43840      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
43841      set EMWS2.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS2.em_nodeid;
43842      where upcase(NODEID) = upcase("Reg");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Reg");
43843      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
43844      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(NODEID)='REG';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

43845      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
43846      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
43847      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
43848         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
43849      retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "";
MPRINT(EM_DIAGRAM):   retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "";
43850      set EMWS2.Reg_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg_EMSCOREDIST;
43851      where upcase(TARGET) = upcase("mpg");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("mpg");
43852      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set EMWS2.REG_EMSCOREDIST.
      WHERE UPCASE(TARGET)='MPG';
NOTE: The data set WORK.MDLCOMP_TEMP has 39 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

43853      data EMWS2.MdlComp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   data EMWS2.MdlComp_EMSCOREDIST;
43854      set EMWS2.MdlComp_EMSCOREDIST work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_EMSCOREDIST work.MdlComp_TEMP;
43855      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set EMWS2.MDLCOMP_EMSCOREDIST.
NOTE: There were 39 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS2.MDLCOMP_EMSCOREDIST has 78 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

43856      data WORK.Reg_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.Reg_OUTFIT;
43857      set EMWS2.Reg_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg_EMOUTFIT;
43858      where TARGET = "mpg";
MPRINT(EM_DIAGRAM):   where TARGET = "mpg";
43859      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS2.REG_EMOUTFIT.
      WHERE TARGET='mpg';
NOTE: The data set WORK.REG_OUTFIT has 1 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS2.REG_EMINFO.
      WHERE (TARGET='mpg') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO407SAJPX has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS2.REG_EMINFO.
      WHERE (TARGET='mpg') and (KEY='DECDATA');
NOTE: The data set WORK.EMINFO407SAJPX has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
43860      data WORK.Reg_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.Reg_OUTFIT;
43861      set WORK.Reg_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.Reg_OUTFIT;
43862      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.REG_OUTFIT.
NOTE: The data set WORK.REG_OUTFIT has 1 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

43863      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
43864      set EMWS2.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS2.em_nodeid;
43865      where upcase(NODEID) = upcase("Reg");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Reg");
43866      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
43867      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(NODEID)='REG';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

43868      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
43869      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
43870      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
43871         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
43872      retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "";
MPRINT(EM_DIAGRAM):   retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "";
43873      set WORK.Reg_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.Reg_OUTFIT;
43874      where upcase(TARGET) = upcase("mpg");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("mpg");
43875      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.REG_OUTFIT.
      WHERE UPCASE(TARGET)='MPG';
NOTE: The data set WORK.MDLCOMP_TEMP has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

43876      data EMWS2.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS2.MdlComp_EMOUTFIT;
43877      set EMWS2.MdlComp_EMOUTFIT work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_EMOUTFIT work.MdlComp_TEMP;
43878      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS2.MDLCOMP_EMOUTFIT.
NOTE: There were 1 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS2.MDLCOMP_EMOUTFIT has 2 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

43879      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
43880      set EMWS2.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS2.em_nodeid;
43881      where upcase(NODEID) = upcase("Reg");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Reg");
43882      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
43883      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS2.EM_NODEID.
      WHERE UPCASE(NODEID)='REG';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

43884      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
43885      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
43886      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
43887         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
43888      retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "";
MPRINT(EM_DIAGRAM):   retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "";
43889      set EMWS2.Reg_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg_EMRESIDUAL;
43890      where upcase(TARGET) = upcase("mpg");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("mpg");
43891      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set EMWS2.REG_EMRESIDUAL.
      WHERE UPCASE(TARGET)='MPG';
NOTE: The data set WORK.MDLCOMP_TEMP has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.07 seconds
      

43892      data EMWS2.MdlComp_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   data EMWS2.MdlComp_EMRESIDUAL;
43893      set EMWS2.MdlComp_EMRESIDUAL work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_EMRESIDUAL work.MdlComp_TEMP;
43894      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 19 observations read from the data set EMWS2.MDLCOMP_EMRESIDUAL.
NOTE: There were 17 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS2.MDLCOMP_EMRESIDUAL has 36 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      

*------------------------------------------------------------* 
* "Compute assessment statistics" 
*------------------------------------------------------------* 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Neural" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_mpg_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS2.Neural_TRAIN;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("mpg") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("mpg") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_mpg _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_mpg") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_mpg") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_mpg mpg _tmpfreqvar_ WHERE = (mpg > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_mpg ;
MPRINT(EM_ASSESS):   VAR mpg ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Neural" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Neural" and DATAROLE="VALIDATE";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSVALID', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_mpg_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS2.Neural_VALIDATE;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("mpg") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("mpg") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_mpg _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_mpg") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_mpg") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_mpg mpg _tmpfreqvar_ WHERE = (mpg > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_mpg ;
MPRINT(EM_ASSESS):   VAR mpg ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Reg" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg_mpg_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS2.Reg_TRAIN;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("mpg") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("mpg") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_mpg _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_mpg") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_mpg") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_mpg mpg _tmpfreqvar_ WHERE = (mpg > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_mpg ;
MPRINT(EM_ASSESS):   VAR mpg ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Reg" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Reg" and DATAROLE="VALIDATE";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSVALID', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg_mpg_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS2.Reg_VALIDATE;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("mpg") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("mpg") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_mpg _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_mpg") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_mpg") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_mpg mpg _tmpfreqvar_ WHERE = (mpg > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_mpg ;
MPRINT(EM_ASSESS):   VAR mpg ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
43987      proc sort data=EMWS2.MdlComp_EMOUTFIT NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.MdlComp_EMOUTFIT NOTHREADS;
43988      by model target;
MPRINT(EM_DIAGRAM):   by model target;
43989      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS2.MDLCOMP_EMOUTFIT.
NOTE: The data set EMWS2.MDLCOMP_EMOUTFIT has 2 observations and 39 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

43990      data EMWS2.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS2.MdlComp_EMOUTFIT;
43991      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200 _CRITERION_ 8;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200 _CRITERION_ 8;
43992      set EMWS2.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_EMOUTFIT;
43993      label _CRITERION_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_selectioncriterion_vlabel ,  NOQUOTE, %nrbquote(Valid: Average Squared Error)))";
MPRINT(EM_DIAGRAM):   label _CRITERION_ = "Selection Criterion: Valid: Average Squared Error";
43994      _CRITERION_ = _VASE_;
MPRINT(EM_DIAGRAM):   _CRITERION_ = _VASE_;
43995      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS2.MDLCOMP_EMOUTFIT.
NOTE: The data set EMWS2.MDLCOMP_EMOUTFIT has 2 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

43996      data EMWS2.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS2.MdlComp_EMOUTFIT;
43997      length USE $1;
MPRINT(EM_DIAGRAM):   length USE $1;
43998      label USE= "%sysfunc(sasmsg(sashelp.dmine, rpt_selmodel_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label USE= "Selected Model";
43999      set EMWS2.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_EMOUTFIT;
44000      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable USE is uninitialized.
NOTE: There were 2 observations read from the data set EMWS2.MDLCOMP_EMOUTFIT.
NOTE: The data set EMWS2.MDLCOMP_EMOUTFIT has 2 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

44001      proc sort data = EMWS2.MdlComp_EMOUTFIT NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.MdlComp_EMOUTFIT NOTHREADS;
44002      by
44003      _VASE_
44004      _VMISC_ _ASE_ _MISC_;
MPRINT(EM_DIAGRAM):   by _VASE_ _VMISC_ _ASE_ _MISC_;
44005      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS2.MDLCOMP_EMOUTFIT.
NOTE: The data set EMWS2.MDLCOMP_EMOUTFIT has 2 observations and 41 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

44006      %let EM_AUTOMODEL = %str();
44007      data EMWS2.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS2.MdlComp_EMOUTFIT;
44008      set EMWS2.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_EMOUTFIT;
44009      drop found;
MPRINT(EM_DIAGRAM):   drop found;
44010      retain found 0;
MPRINT(EM_DIAGRAM):   retain found 0;
44011      if found = 0 and _VASE_ ne . then do;
MPRINT(EM_DIAGRAM):   if found = 0 and _VASE_ ne . then do;
44012      use = 'Y';
MPRINT(EM_DIAGRAM):   use = 'Y';
44013      found = 1;
MPRINT(EM_DIAGRAM):   found = 1;
44014      call symput('EM_AUTOMODEL', model);
MPRINT(EM_DIAGRAM):   call symput('EM_AUTOMODEL', model);
44015      end;
MPRINT(EM_DIAGRAM):   end;
44016      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS2.MDLCOMP_EMOUTFIT.
NOTE: The data set EMWS2.MDLCOMP_EMOUTFIT has 2 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

44017      title ' ';
MPRINT(EM_DIAGRAM):    title ' ';
44018      proc print data=EMWS2.MdlComp_EMOUTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.MdlComp_EMOUTFIT noobs label;
44019      var
44020      USE
44021      MODEL
44022      MODELDESCRIPTION
44023      _VASE_
44024      _ASE_
44025      _MISC_
44026      ;
MPRINT(EM_DIAGRAM):   var USE MODEL MODELDESCRIPTION _VASE_ _ASE_ _MISC_ ;
44027      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title,        NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Fit Statistics";
The SAS System

44028      title10 "Model Selection based on Valid: Average Squared Error (_VASE_)";
MPRINT(EM_DIAGRAM):   title10 "Model Selection based on Valid: Average Squared Error (_VASE_)";
MPRINT(EM_DIAGRAM):   run;
44029      run;

NOTE: There were 2 observations read from the data set EMWS2.MDLCOMP_EMOUTFIT.
NOTE: The PROCEDURE PRINT printed page 17.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

44030      title9;
MPRINT(EM_DIAGRAM):   title9;
44031      title10;
MPRINT(EM_DIAGRAM):   title10;
44032      proc transpose data=EMWS2.MdlComp_EMOUTFIT out= work.modelstats(rename=(_LABEL_=Label _NAME_=STAT));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS2.MdlComp_EMOUTFIT out= work.modelstats(rename=(_LABEL_=Label _NAME_=STAT));
44033      ID model;
MPRINT(EM_DIAGRAM):   ID model;
44034      by target targetLabel;
MPRINT(EM_DIAGRAM):   by target targetLabel;
44035      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS2.MDLCOMP_EMOUTFIT.
NOTE: The data set WORK.MODELSTATS has 35 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

44036      data work.modelstats;
MPRINT(EM_DIAGRAM):   data work.modelstats;
44037      set work.modelstats;
MPRINT(EM_DIAGRAM):   set work.modelstats;
44038      if substr(STAT, 1, 2) = '_V' or STAT='VKS' then do;
MPRINT(EM_DIAGRAM):   if substr(STAT, 1, 2) = '_V' or STAT='VKS' then do;
44039      NumRole=2;
MPRINT(EM_DIAGRAM):   NumRole=2;
44040      end;
MPRINT(EM_DIAGRAM):   end;
44041      else if substr(STAT, 1, 2) = '_T' or STAT='TKS' then do;
MPRINT(EM_DIAGRAM):   else if substr(STAT, 1, 2) = '_T' or STAT='TKS' then do;
44042      NumRole=3;
MPRINT(EM_DIAGRAM):   NumRole=3;
44043      end;
MPRINT(EM_DIAGRAM):   end;
44044      else if substr(STAT, 1, 1) = '_' or STAT in('KS', 'BINNED_KS_PROB_CUTOFF') then do;
MPRINT(EM_DIAGRAM):   else if substr(STAT, 1, 1) = '_' or STAT in('KS', 'BINNED_KS_PROB_CUTOFF') then do;
44045      NumRole=1;
MPRINT(EM_DIAGRAM):   NumRole=1;
44046      end;
MPRINT(EM_DIAGRAM):   end;
44047      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 35 observations read from the data set WORK.MODELSTATS.
NOTE: The data set WORK.MODELSTATS has 35 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

44048      proc sort data=work.modelstats out=work.modelstats;
MPRINT(EM_DIAGRAM):   proc sort data=work.modelstats out=work.modelstats;
44049      by NumRole STAT;
MPRINT(EM_DIAGRAM):   by NumRole STAT;
44050      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 35 observations read from the data set WORK.MODELSTATS.
NOTE: The data set WORK.MODELSTATS has 35 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

44051      proc format;
MPRINT(EM_DIAGRAM):   proc format;
44052      value RoleFmt 1='Train' 2='Valid' 3='Test';
MPRINT(EM_DIAGRAM):   value RoleFmt 1='Train' 2='Valid' 3='Test';
NOTE: Format ROLEFMT has been output.
MPRINT(EM_DIAGRAM):   run;
44053      run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

44054      proc print data= work.modelstats(drop=STAT target targetLabel) noobs label;
MPRINT(EM_DIAGRAM):   proc print data= work.modelstats(drop=STAT target targetLabel) noobs label;
44055      label Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_statistics_vlabel, NOQUOTE))" NumRole= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Statistics" NumRole= "Data Role";
44056      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_fittable_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Fit Statistics Table";
44057      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_target_title,   NOQUOTE, mpg))";
MPRINT(EM_DIAGRAM):   title10 "Target: mpg";
MPRINT(EM_DIAGRAM):   by NumRole;
MPRINT(EM_DIAGRAM):   format NumRole RoleFmt.;
MPRINT(EM_DIAGRAM):   run;
44058      by NumRole;
44059      format NumRole RoleFmt.;
44060      run;

NOTE: There were 35 observations read from the data set WORK.MODELSTATS.
NOTE: The PROCEDURE PRINT printed page 18.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

44061      title9;
MPRINT(EM_DIAGRAM):   title9;
44062      title10;
MPRINT(EM_DIAGRAM):   title10;
44063      data EMWS2.MdlComp_COMPAREFIT;
MPRINT(EM_DIAGRAM):   data EMWS2.MdlComp_COMPAREFIT;
44064      length DataRole Target $32 targetlabel $200;
MPRINT(EM_DIAGRAM):   length DataRole Target $32 targetlabel $200;
44065      label DataRole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,  NOQUOTE))" STAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_vlabel,   NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_statlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DataRole = "Data Role" STAT = "Fit Statistics" LABEL = "Statistics Label";
44066      set work.modelstats;
MPRINT(EM_DIAGRAM):   set work.modelstats;
44067      DataRole = strip(put(NumRole, Rolefmt.));
MPRINT(EM_DIAGRAM):   DataRole = strip(put(NumRole, Rolefmt.));
44068      drop NumRole;
MPRINT(EM_DIAGRAM):   drop NumRole;
44069      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 35 observations read from the data set WORK.MODELSTATS.
NOTE: The data set EMWS2.MDLCOMP_COMPAREFIT has 35 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

44070      %macro ReportFit;
44071      proc transpose data= EMWS2.MdlComp_EMOUTFIT(obs=1) out=tempFit;
44072      run;
44073      data _null_;
44074      set tempfit end=eof;
44075      retain statCount 0;
44076      if substr(_NAME_,1,2) ^in('_V', '_T', 'TK', 'VK') then do;
44077      statCount + 1;
44078      call symput('statName'!!strip(put(statCount,best.)), _NAME_);
44079      call symput('statLabel'!!strip(put(statCount,best.)), scan(_LABEL_,2, ':'));
44080      end;
44081      if eof then do;
44082      call symput('statCount', strip(put(statCount,best.)));
44083      end;
44084      run;
44085      data EMWS2.MdlComp_EMREPORTFIT;
44086      set EMWS2.MdlComp_EMOUTFIT;
44087      length FitStat $41 Label $40;
44088      label FitStat = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_vlabel,   NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_statlabel_vlabel, NOQUOTE))";
44089      %do i=1 %to &statCount;
44090      FitStat="&&StatName&i";
44091      Label="&&StatLabel&i";
44092      Train =&&StatName&i;
44093      %if &&StatName&i= KS %then %do;
44094      Validate = VKS;
44095      Test = TKS;
44096      %end;
44097      %else %if &&StatName&i= BINNED_KS_PROB_CUTOFF %then %do;
44098      Validate = _VBINNED_KS_PROB_CUTOFF_;
44099      Test = _TBINNED_KS_PROB_CUTOFF_;
44100      %end;
44101      %else %do;
44102      %let VstatName= _V%substr(&&StatName&i,2);
44103      %let TstatName= _T%substr(&&StatName&i,2);
44104      Validate=&VStatName;
44105      Test=&TStatName;
44106      %end;
44107      output;
44108      %end;
44109      keep Parent Model Target TargetLabel FitStat Label Train Validate Test;
44110      run;
44111      %mend;
44112      %reportFit;
MPRINT(EM_DIAGRAM):   
MPRINT(REPORTFIT):   proc transpose data= EMWS2.MdlComp_EMOUTFIT(obs=1) out=tempFit;
MPRINT(REPORTFIT):   run;

NOTE: There were 1 observations read from the data set EMWS2.MDLCOMP_EMOUTFIT.
NOTE: The data set WORK.TEMPFIT has 35 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(REPORTFIT):   data _null_;
MPRINT(REPORTFIT):   set tempfit end=eof;
MPRINT(REPORTFIT):   retain statCount 0;
MPRINT(REPORTFIT):   if substr(_NAME_,1,2) ^in('_V', '_T', 'TK', 'VK') then do;
MPRINT(REPORTFIT):   statCount + 1;
MPRINT(REPORTFIT):   call symput('statName'!!strip(put(statCount,best.)), _NAME_);
MPRINT(REPORTFIT):   call symput('statLabel'!!strip(put(statCount,best.)), scan(_LABEL_,2, ':'));
MPRINT(REPORTFIT):   end;
MPRINT(REPORTFIT):   if eof then do;
MPRINT(REPORTFIT):   call symput('statCount', strip(put(statCount,best.)));
MPRINT(REPORTFIT):   end;
MPRINT(REPORTFIT):   run;

NOTE: There were 35 observations read from the data set WORK.TEMPFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(REPORTFIT):   data EMWS2.MdlComp_EMREPORTFIT;
MPRINT(REPORTFIT):   set EMWS2.MdlComp_EMOUTFIT;
MPRINT(REPORTFIT):   length FitStat $41 Label $40;
MPRINT(REPORTFIT):   label FitStat = "Fit Statistics" LABEL = "Statistics Label";
MPRINT(REPORTFIT):   FitStat="_CRITERION_";
MPRINT(REPORTFIT):   Label=" Valid";
MPRINT(REPORTFIT):   Train =_CRITERION_;
MPRINT(REPORTFIT):   Validate=_VCRITERION_;
MPRINT(REPORTFIT):   Test=_TCRITERION_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_DFT_      ";
MPRINT(REPORTFIT):   Label=" Total Degrees of Freedom                  ";
MPRINT(REPORTFIT):   Train =_DFT_ ;
MPRINT(REPORTFIT):   Validate=_VDFT_;
MPRINT(REPORTFIT):   Test=_TDFT_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_DFE_      ";
MPRINT(REPORTFIT):   Label=" Degrees of Freedom for Error              ";
MPRINT(REPORTFIT):   Train =_DFE_ ;
MPRINT(REPORTFIT):   Validate=_VDFE_;
MPRINT(REPORTFIT):   Test=_TDFE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_DFM_      ";
MPRINT(REPORTFIT):   Label=" Model Degrees of Freedom                  ";
MPRINT(REPORTFIT):   Train =_DFM_ ;
MPRINT(REPORTFIT):   Validate=_VDFM_;
MPRINT(REPORTFIT):   Test=_TDFM_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_NW_       ";
MPRINT(REPORTFIT):   Label=" Number of Estimated Weights               ";
MPRINT(REPORTFIT):   Train =_NW_ ;
MPRINT(REPORTFIT):   Validate=_VNW_;
MPRINT(REPORTFIT):   Test=_TNW_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_AIC_      ";
MPRINT(REPORTFIT):   Label=" Akaike's Information Criterion            ";
MPRINT(REPORTFIT):   Train =_AIC_ ;
MPRINT(REPORTFIT):   Validate=_VAIC_;
MPRINT(REPORTFIT):   Test=_TAIC_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_SBC_      ";
MPRINT(REPORTFIT):   Label=" Schwarz's Bayesian Criterion              ";
MPRINT(REPORTFIT):   Train =_SBC_ ;
MPRINT(REPORTFIT):   Validate=_VSBC_;
MPRINT(REPORTFIT):   Test=_TSBC_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_ASE_      ";
MPRINT(REPORTFIT):   Label=" Average Squared Error                     ";
MPRINT(REPORTFIT):   Train =_ASE_ ;
MPRINT(REPORTFIT):   Validate=_VASE_;
MPRINT(REPORTFIT):   Test=_TASE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_MAX_      ";
MPRINT(REPORTFIT):   Label=" Maximum Absolute Error                    ";
MPRINT(REPORTFIT):   Train =_MAX_ ;
MPRINT(REPORTFIT):   Validate=_VMAX_;
MPRINT(REPORTFIT):   Test=_TMAX_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_DIV_      ";
MPRINT(REPORTFIT):   Label=" Divisor for ASE                           ";
MPRINT(REPORTFIT):   Train =_DIV_ ;
MPRINT(REPORTFIT):   Validate=_VDIV_;
MPRINT(REPORTFIT):   Test=_TDIV_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_NOBS_     ";
MPRINT(REPORTFIT):   Label=" Sum of Frequencies                        ";
MPRINT(REPORTFIT):   Train =_NOBS_ ;
MPRINT(REPORTFIT):   Validate=_VNOBS_;
MPRINT(REPORTFIT):   Test=_TNOBS_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_RASE_     ";
MPRINT(REPORTFIT):   Label=" Root Average Squared Error                ";
MPRINT(REPORTFIT):   Train =_RASE_ ;
MPRINT(REPORTFIT):   Validate=_VRASE_;
MPRINT(REPORTFIT):   Test=_TRASE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_SSE_      ";
MPRINT(REPORTFIT):   Label=" Sum of Squared Errors                     ";
MPRINT(REPORTFIT):   Train =_SSE_ ;
MPRINT(REPORTFIT):   Validate=_VSSE_;
MPRINT(REPORTFIT):   Test=_TSSE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_SUMW_     ";
MPRINT(REPORTFIT):   Label=" Sum of Case Weights Times Freq            ";
MPRINT(REPORTFIT):   Train =_SUMW_ ;
MPRINT(REPORTFIT):   Validate=_VSUMW_;
MPRINT(REPORTFIT):   Test=_TSUMW_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_FPE_      ";
MPRINT(REPORTFIT):   Label=" Final Prediction Error                    ";
MPRINT(REPORTFIT):   Train =_FPE_ ;
MPRINT(REPORTFIT):   Validate=_VFPE_;
MPRINT(REPORTFIT):   Test=_TFPE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_MSE_      ";
MPRINT(REPORTFIT):   Label=" Mean Squared Error                        ";
MPRINT(REPORTFIT):   Train =_MSE_ ;
MPRINT(REPORTFIT):   Validate=_VMSE_;
MPRINT(REPORTFIT):   Test=_TMSE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_RFPE_     ";
MPRINT(REPORTFIT):   Label=" Root Final Prediction Error               ";
MPRINT(REPORTFIT):   Train =_RFPE_ ;
MPRINT(REPORTFIT):   Validate=_VRFPE_;
MPRINT(REPORTFIT):   Test=_TRFPE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_RMSE_     ";
MPRINT(REPORTFIT):   Label=" Root Mean Squared Error                   ";
MPRINT(REPORTFIT):   Train =_RMSE_ ;
MPRINT(REPORTFIT):   Validate=_VRMSE_;
MPRINT(REPORTFIT):   Test=_TRMSE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_AVERR_    ";
MPRINT(REPORTFIT):   Label=" Average Error Function                    ";
MPRINT(REPORTFIT):   Train =_AVERR_ ;
MPRINT(REPORTFIT):   Validate=_VAVERR_;
MPRINT(REPORTFIT):   Test=_TAVERR_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_ERR_      ";
MPRINT(REPORTFIT):   Label=" Error Function                            ";
MPRINT(REPORTFIT):   Train =_ERR_ ;
MPRINT(REPORTFIT):   Validate=_VERR_;
MPRINT(REPORTFIT):   Test=_TERR_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_MISC_     ";
MPRINT(REPORTFIT):   Label=" Misclassification Rate                    ";
MPRINT(REPORTFIT):   Train =_MISC_ ;
MPRINT(REPORTFIT):   Validate=_VMISC_;
MPRINT(REPORTFIT):   Test=_TMISC_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_WRONG_    ";
MPRINT(REPORTFIT):   Label=" Number of Wrong Classifications           ";
MPRINT(REPORTFIT):   Train =_WRONG_ ;
MPRINT(REPORTFIT):   Validate=_VWRONG_;
MPRINT(REPORTFIT):   Test=_TWRONG_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   keep Parent Model Target TargetLabel FitStat Label Train Validate Test;
MPRINT(REPORTFIT):   run;

NOTE: Variable _VCRITERION_ is uninitialized.
NOTE: Variable _TCRITERION_ is uninitialized.
NOTE: Variable _VDFT_ is uninitialized.
NOTE: Variable _TDFT_ is uninitialized.
NOTE: Variable _VDFE_ is uninitialized.
NOTE: Variable _TDFE_ is uninitialized.
NOTE: Variable _VDFM_ is uninitialized.
NOTE: Variable _TDFM_ is uninitialized.
NOTE: Variable _VNW_ is uninitialized.
NOTE: Variable _TNW_ is uninitialized.
NOTE: Variable _VAIC_ is uninitialized.
NOTE: Variable _TAIC_ is uninitialized.
NOTE: Variable _VSBC_ is uninitialized.
NOTE: Variable _TSBC_ is uninitialized.
NOTE: Variable _TASE_ is uninitialized.
NOTE: Variable _TMAX_ is uninitialized.
NOTE: Variable _TDIV_ is uninitialized.
NOTE: Variable _TNOBS_ is uninitialized.
NOTE: Variable _TRASE_ is uninitialized.
NOTE: Variable _TSSE_ is uninitialized.
NOTE: Variable _TSUMW_ is uninitialized.
NOTE: Variable _VFPE_ is uninitialized.
NOTE: Variable _TFPE_ is uninitialized.
NOTE: Variable _TMSE_ is uninitialized.
NOTE: Variable _VRFPE_ is uninitialized.
NOTE: Variable _TRFPE_ is uninitialized.
NOTE: Variable _TRMSE_ is uninitialized.
NOTE: Variable _TAVERR_ is uninitialized.
NOTE: Variable _TERR_ is uninitialized.
NOTE: Variable _TMISC_ is uninitialized.
NOTE: Variable _TWRONG_ is uninitialized.
NOTE: There were 2 observations read from the data set EMWS2.MDLCOMP_EMOUTFIT.
NOTE: The data set EMWS2.MDLCOMP_EMREPORTFIT has 44 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):  ;

44113      proc datasets library=EMWS2 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS2 nolist;
44114      modify MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):   modify MdlComp_EMRANK;
44115      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,  NOQUOTE))" TARGET =
44116         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" DATAROLE = "Data Role" TARGET = "Target Variable" TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   run;
44117      run;

NOTE: MODIFY was successful for EMWS2.MDLCOMP_EMRANK.DATA.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

44118      proc sort data=EMWS2.MdlComp_EMRANK NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp_EMRANK NOTHREADS;
44119      by descending model target;
MPRINT(EM_DIAGRAM):   by descending model target;
44120      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 78 observations read from the data set EMWS2.MDLCOMP_EMRANK.
NOTE: The data set EMWS2.MDLCOMP_EMRANK has 78 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

44121      proc datasets library=EMWS2 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS2 nolist;
44122      modify MdlComp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify MdlComp_EMSCOREDIST;
44123      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,  NOQUOTE))" TARGET =
44124         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" DATAROLE = "Data Role" TARGET = "Target Variable" TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   run;
44125      run;

NOTE: MODIFY was successful for EMWS2.MDLCOMP_EMSCOREDIST.DATA.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

44126      proc sort data=EMWS2.MdlComp_EMSCOREDIST NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp_EMSCOREDIST NOTHREADS;
44127      by descending model target;
MPRINT(EM_DIAGRAM):   by descending model target;
44128      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 78 observations read from the data set EMWS2.MDLCOMP_EMSCOREDIST.
NOTE: The data set EMWS2.MDLCOMP_EMSCOREDIST has 78 observations and 18 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
